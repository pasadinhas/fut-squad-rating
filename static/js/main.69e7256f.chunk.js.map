{"version":3,"sources":["Rating.jsx","RMath.js","UI.js","RatingChange.jsx","App.js","reportWebVitals.js","index.js"],"names":["WHITELISTED_KEYS","Set","onBlur","props","e","newRating","parseInt","target","textContent","isNaN","rating","setRating","Rating","classHighLow","avg","className","onClick","contentEditable","onKeyDown","key","match","has","keyCode","preventDefault","onFocus","setTimeout","document","execCommand","sum","ratings","reduce","a","b","correction","ratingsAverage","acc","r","Math","max","RMath","sumWithCorrection","round","UI","n","precision","p","multiplier","pow","floor","Number","EPSILON","uniqueRatings","sort","map","from","to","values","indexOf","ratings_change","fn","baseRating","BASE_RATINGS","App","useState","baseSetRatings","setRatings","i","squadAverage","squadRating","width","RatingChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.69e7256f.chunk.js","sourcesContent":["const WHITELISTED_KEYS = new Set([\n  37, // left arrow\n  38, // up arrow\n  39, // right arrow\n  40, // down arrow\n  8, // backspace\n  46, // delete\n  9, // tab\n]);\n\nfunction onKeyDown(props) {\n  return (e) => {\n    if (!e.key.match(/^[0-9]/g) && !WHITELISTED_KEYS.has(e.keyCode)) {\n      e.preventDefault();\n    }\n  };\n}\n\nfunction onBlur(props) {\n  return (e) => {\n    const newRating = parseInt(e.target.textContent);\n\n    if (isNaN(newRating) || newRating < 1 || newRating > 99) {\n      // New value is not a valid rating.\n      e.target.textContent = props.rating;\n    } else {\n      props.setRating(newRating);\n    }\n  };\n}\n\nfunction onFocus(props) {\n  return (e) => {\n    setTimeout(function() {\n      document.execCommand('selectAll', false, null)\n    }, 0);\n  };\n}\n\nfunction Rating(props) {\n  const classHighLow = props.rating > props.avg ? \"RatingHigh\" : \"RatingLow\";\n  return (\n    <div className={`Rating ${classHighLow}`}>\n      <div\n        className=\"RatingControls RatingIncrease\"\n        onClick={() => props.setRating(props.rating + 1)}\n      ></div>\n      <div\n        className=\"RatingValue\"\n        contentEditable={true}\n        onKeyDown={onKeyDown(props)}\n        onBlur={onBlur(props)}\n        onFocus={onFocus(props)}\n      >\n        {props.rating}\n      </div>\n      <div\n        className=\"RatingControls RatingDecrease\"\n        onClick={() => props.setRating(props.rating - 1)}\n      ></div>\n    </div>\n  );\n}\n\nexport default Rating;\n","function sum(ratings) {\n  return ratings.reduce((a, b) => a + b, 0);\n}\n\nfunction avg(ratings) {\n  return sum(ratings) / 11.0;\n}\n\nfunction correction(ratings) {\n  const ratingsAverage = avg(ratings);\n  return ratings.reduce((acc, r) => acc + Math.max(0, r - ratingsAverage), 0);\n}\n\nfunction rating(ratings) {\n  const sumWithCorrection = sum(ratings) + correction(ratings);\n  const sumWithCorrectionRounded = Math.round(sumWithCorrection);\n  return sumWithCorrectionRounded / 11.0;\n}\n\nconst RMath = {\n  sum, \n  avg, \n  correction, \n  rating\n}\n\nexport default RMath","function round(n, precision) {\n  const p = precision ?? 2;\n  const multiplier = Math.pow(10, p);\n  return Math.floor((n + Number.EPSILON) * multiplier) / multiplier;\n}\n\nconst UI = {\n  round\n}\n\nexport default UI","import RMath from './RMath'\nimport UI from './UI'\n\nfunction ratings_change(ratings, from, to) {\n  const values = [...ratings];\n  values[values.indexOf(from)] = to;\n  return values;\n}\n\nfunction Rating(props) {\n\n  const uniqueRatings = [...new Set(props.ratings)].sort()\n\n  return (\n    <table>\n      <tr>\n        <td>Change</td>\n        <td>New Rating</td>\n        <td>Diff</td>\n      </tr>\n      {uniqueRatings.map((r) => {\n        const newRating = RMath.rating(\n          ratings_change(props.ratings, r, props.fn(r))\n        );\n        return (\n          <tr>\n            <td>\n              {r} &#8594; {props.fn(r)}\n            </td>\n            <td>{UI.round(newRating)}</td>\n            <td>{UI.round(newRating - props.baseRating)}</td>\n          </tr>\n        );\n      })}\n    </table>\n  );\n}\n\nexport default Rating;\n","import './App.css';\nimport Rating from './Rating.jsx'\nimport RatingChange from './RatingChange.jsx'\nimport React, { useState } from 'react';\nimport RMath from './RMath'\nimport UI from './UI'\n\nconst BASE_RATINGS = [77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77]\n\n\nfunction App() {\n\n  const [ratings, baseSetRatings] = useState(BASE_RATINGS)\n  const setRatings = ratings => baseSetRatings([...ratings])\n\n  const setRating = i => r => {\n    ratings[i] = r\n    setRatings(ratings)\n  }\n\n  const squadAverage = RMath.avg(ratings)\n  const squadRating = RMath.rating(ratings)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {ratings.map((r, i) => <Rating rating={r} setRating={setRating(i)} avg={squadAverage} />)}\n      </header>\n\n      <h1>Rating: {UI.round(squadRating)}</h1>\n      <p>Average: {UI.round(RMath.avg(ratings))}</p>\n      <p>Correction: {UI.round(RMath.correction(ratings, RMath.avg(ratings)))}</p>\n\n      <button className=\"btn\" onClick={() => {\n        ratings.sort((a, b) => b - a)\n        setRatings(ratings)\n      }}>Sort Ratings</button>      \n      \n      <br/>\n      <br/>\n      <br/>\n\n      <table width=\"100%\">\n        <tr>\n          <td width=\"50%\">\n            <RatingChange ratings={ratings} fn={r => r + 1} baseRating={squadRating} />\n          </td>\n          <td width=\"50%\">\n            <RatingChange ratings={ratings} fn={r => r - 1} baseRating={squadRating} />\n          </td>\n        </tr>\n      </table>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}