{"version":3,"sources":["Rating.jsx","RMath.js","UI.js","SquadRating.jsx","RatingResetControls.jsx","App.js","reportWebVitals.js","index.js"],"names":["WHITELISTED_KEYS","Set","onBlur","props","e","newRating","parseInt","target","textContent","isNaN","rating","setRating","Rating","classHighLow","avg","className","increases","onClick","contentEditable","onKeyDown","key","match","has","keyCode","preventDefault","onFocus","setTimeout","document","execCommand","decreases","sum","ratings","reduce","a","b","correction","ratingsAverage","acc","r","Math","max","RMath","sumWithCorrection","round","numberIntegerPart","n","toString","numberFractionalPart","fractional","zeroFill","pow","minLength","nStr","nbZeroes","length","repeat","UI","precision","p","multiplier","floor","Number","EPSILON","isInteger","SquadRating","ratingIntegerPart","ratingFractionalPart","decimalPart","RatingResetControls","onReset","useState","value","setValue","prev","window","confirm","ratingsArrayOf","Array","fill","ratings_change","from","to","values","indexOf","BASE_RATINGS","App","baseSetRatings","setRatings","i","squadAverage","squadRating","squadRatingInteger","ratingChanges","map","ratingWithIncrease","result","current","sort","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.13ae279c.chunk.js","sourcesContent":["const WHITELISTED_KEYS = new Set([\n  37, // left arrow\n  38, // up arrow\n  39, // right arrow\n  40, // down arrow\n  8, // backspace\n  46, // delete\n  9, // tab\n]);\n\nfunction onKeyDown(props) {\n  return (e) => {\n    if (!e.key.match(/^[0-9]/g) && !WHITELISTED_KEYS.has(e.keyCode)) {\n      e.preventDefault();\n    }\n  };\n}\n\nfunction onBlur(props) {\n  return (e) => {\n    const newRating = parseInt(e.target.textContent);\n\n    if (isNaN(newRating) || newRating < 1 || newRating > 99) {\n      // New value is not a valid rating.\n      e.target.textContent = props.rating;\n    } else {\n      props.setRating(newRating);\n    }\n  };\n}\n\nfunction onFocus(props) {\n  return (e) => {\n    setTimeout(function() {\n      document.execCommand('selectAll', false, null)\n    }, 0);\n  };\n}\n\nfunction Rating(props) {\n  const classHighLow = props.rating > props.avg ? \"RatingHigh\" : \"RatingLow\";\n  return (\n    <div className={`Rating ${classHighLow}`}>\n      <div\n        className={\"RatingControls RatingIncrease \" + (props.increases ? \"green\" : \"\")}\n        onClick={() => props.setRating(props.rating + 1)}\n      ></div>\n      <div\n        className=\"RatingValue\"\n        contentEditable={true}\n        onKeyDown={onKeyDown(props)}\n        onBlur={onBlur(props)}\n        onFocus={onFocus(props)}\n      >\n        {props.rating}\n      </div>\n      <div\n        className={\"RatingControls RatingDecrease \" + (props.decreases ? \"\" : \"green\")}\n        onClick={() => props.setRating(props.rating - 1)}\n      ></div>\n    </div>\n  );\n}\n\nexport default Rating;\n","function sum(ratings) {\n  return ratings.reduce((a, b) => a + b, 0);\n}\n\nfunction avg(ratings) {\n  return sum(ratings) / 11.0;\n}\n\nfunction correction(ratings) {\n  const ratingsAverage = avg(ratings);\n  return ratings.reduce((acc, r) => acc + Math.max(0, r - ratingsAverage), 0);\n}\n\nfunction rating(ratings) {\n  const sumWithCorrection = sum(ratings) + correction(ratings);\n  const sumWithCorrectionRounded = Math.round(sumWithCorrection);\n  return sumWithCorrectionRounded / 11.0;\n}\n\nconst RMath = {\n  sum, \n  avg, \n  correction, \n  rating\n}\n\nexport default RMath","function round(n, precision) {\n  const p = precision ?? 2;\n  const multiplier = Math.pow(10, p);\n  return Math.floor((n + Number.EPSILON) * multiplier) / multiplier;\n}\n\nfunction numberIntegerPart(n) {\n  return parseInt(n).toString()\n}\n\nfunction numberFractionalPart(n) {\n  const fractional = n - numberIntegerPart(n)\n  return zeroFill(parseInt(fractional * Math.pow(10, 2)), 2)\n}\n\nfunction isInteger(n) {\n  return parseInt(numberFractionalPart(n)) === 0;\n}\n\nfunction zeroFill(n, minLength) {\n  let nStr = n.toString()\n  let nbZeroes = Math.max(0, minLength - nStr.length)\n  return `${ '0'.repeat(nbZeroes) }${ nStr }`\n}\n\nconst UI = {\n  round,\n  numberIntegerPart,\n  numberFractionalPart,\n  zeroFill,\n  isInteger\n}\n\nexport default UI","import UI from './UI'\n  \nfunction SquadRating(props) {\n    const ratingIntegerPart = UI.numberIntegerPart(props.rating)\n    const ratingFractionalPart = UI.numberFractionalPart(props.rating)\n\n    const isExact = parseInt(ratingFractionalPart) === 0;\n\n    const decimalPart = !isExact \n        ? <span className='decimal'>.{ratingFractionalPart}</span> \n        : \"\"\n    \n    return <div className='squad-rating'><span>{ratingIntegerPart}{decimalPart}</span></div>\n}\n\nexport default SquadRating;","import { useState } from \"react\";\n\nfunction RatingResetControls({onReset}) {\n\n  const [value, setValue] = useState(77);\n\n  return <div className=\"rating-reset-controls\">\n    <button onClick={() => setValue(prev => prev - 1)}>-</button>\n    <span className=\"rating-reset-value\">{value}</span>\n    <button onClick={() => setValue(prev => prev + 1)}>+</button>\n    <button onClick={(e) => {\n      if (window.confirm(`This will reset all current ratings to ${value}. Are you sure you want to continue?`)) {\n        onReset(value)\n      }\n    }}>Reset</button>\n  </div>\n}\n\nexport default RatingResetControls;\n","import './App.css';\nimport Rating from './Rating.jsx'\nimport RatingChange from './RatingChange.jsx'\nimport SquadRating from './SquadRating.jsx'\nimport React, { useState } from 'react';\nimport RMath from './RMath'\nimport UI from './UI'\nimport RatingResetControls from './RatingResetControls';\n\nfunction ratingsArrayOf(rating) {\n  return new Array(11).fill(rating)\n}\n\nfunction ratings_change(ratings, from, to) {\n  const values = [...ratings];\n  values[values.indexOf(from)] = to;\n  return values;\n}\n\nconst BASE_RATINGS = ratingsArrayOf(80)\n\n\nfunction App() {\n\n  const [ratings, baseSetRatings] = useState(BASE_RATINGS)\n  const setRatings = ratings => baseSetRatings([...ratings])\n\n  const setRating = i => r => {\n    ratings[i] = r\n    setRatings(ratings)\n  }\n\n  const squadAverage = RMath.avg(ratings)\n  const squadRating = RMath.rating(ratings)\n\n  const squadRatingInteger = UI.numberIntegerPart(squadRating)\n  const ratingChanges = [...new Set(ratings)].map(rating => {\n    const ratingWithIncrease = UI.numberIntegerPart(RMath.rating(ratings_change(ratings, rating, rating + 1)));\n    const ratingWithDecrease = UI.numberIntegerPart(RMath.rating(ratings_change(ratings, rating, rating - 1)));\n\n    return {\n      rating: rating,\n      decreases: ratingWithDecrease < squadRatingInteger,\n      increases: ratingWithIncrease > squadRatingInteger\n    }\n  }).reduce((result, current) => {\n    result[current.rating] = current;\n    return result;\n  }, {});\n\n  return (\n    <div className=\"App\">\n      <SquadRating rating={squadRating} />\n\n      <div className='ratings-wrapper'>\n        <div className='ratings'>\n          {ratings.map((r, i) => <Rating \n            decreases={ratingChanges[r].decreases} \n            increases={ratingChanges[r].increases} \n            rating={r} \n            setRating={setRating(i)} \n            avg={squadAverage} \n          />)}\n        </div>\n      </div>\n\n      <div className='controls'>\n        <div>\n          <button className=\"btn\" onClick={() => {\n            ratings.sort((a, b) => b - a)\n            setRatings(ratings)\n          }}>Sort Ratings</button>\n        </div>\n        <div>\n          <RatingResetControls onReset={value => setRatings(ratingsArrayOf(value))}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}